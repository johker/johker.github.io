---
layout: post
title: "A Very Basic Octopress Setup Using Vagrant"
date: 2015-01-03 16:49:58 +0000
comments: true
categories: [Vagrant, Octopress, github]

---


Setting up Octopress can be tricky, especially on Windows systems. Using a Vagrant powered virtual machine instead, we are only one command away from a blogging environment ready-to-go. Run from the directory of the Vagrantfile `vagrant up` will create a VirtualBox Image with Ubuntu 14.04 LTS.


``` ruby Vagrantfile for Octopress Setup https://github.com/johker/octopress_vagrant/blob/master/Vagrantfile github
VAGRANTFILE_API_VERSION = "2"
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
	config.vm.box = "octopress" 
  	config.vm.box_url = "https://github.com/kraksoft/vagrant-box-ubuntu/releases/download/14.04/ubuntu-14.04-amd64.box"
  	config.vm.network :private_network, ip: "192.168.34.10"  	
	config.vm.provider "virtualbox" do |v|
	    v.memory = 2048
	end  
	config.vm.provision :shell, :path => "scripts/octopress.sh"  	
  	config.vm.synced_folder "posts/", "/opt/octopress/source/_posts/"    
end
```

The setup is done by shell provisioning by including  `octopress.sh` the folder `/scripts` relative to the Vagrantfile. The folder `/posts` is used to access the `.markdown` files generated by ´rake new post´. The files can be edited with an IDE on the host being automatically synced into the guest machine by _Vagrant_.   

First, Ruby is installed using the Ruby Version Manager (RVM). It requires `curl` and [rvm public key signatures](https://www.digitalocean.com/community/questions/curl-l-get-rvm-io-bash-s-stable-fails-on-cent-os-on-hostgator). The `-y` flag automatically confirms any prompts for `apt-get`. 


``` sh octopress.sh: Ruby Installation https://github.com/johker/octopress_vagrant/blob/master/scripts/octopress.sh github

sudo apt-get -y update
sudo apt-get -y install curl
sudo apt-get -y install gnupg2
gpg2 --keyserver hkp://keys.gnupg.net --recv-keys D39DC0E3
\curl -L https://get.rvm.io | bash -s stable
source /etc/profile.d/rvm.sh
rvm requirements
rvm install ruby
rvm use ruby --default

```

Grant access to default user `vagrant` for `/opt` or the folder in which _Octopress_ will be installed, respectively.

``` sh octopress.sh: Access grants https://github.com/johker/octopress_vagrant/blob/master/scripts/octopress.sh github

sudo chown -R vagrant /opt
cd /opt 

```

Install Git to clone the _Octopress_ repository. Nodejs is also [required]{http://sharadchhetri.com/2014/06/29/octopress-find-javascript-runtime/}.

``` sh octopress.sh: Git and Nodejs https://github.com/johker/octopress_vagrant/blob/master/scripts/octopress.sh github
sudo apt-get -y install nodejs
sudo apt-get -y install -y git-core
```


The git repository cannot to be cloned into the folder `/opt/octopress` directly because _Vagrant_ already synchronized the `posts` folder on machine startup. Thus, we clone to a temporary folder and move the repository afterwards.
 

``` sh octopress.sh: Clone Repository https://github.com/johker/octopress_vagrant/blob/master/scripts/octopress.sh github

git clone git://github.com/imathis/octopress.git temp
mv temp/.git octopress/.git
rm -rf temp
cd /opt/octopress 
git fetch --all
git reset --hard origin/master
```
Finally, install _Octopress_ and its requirements and grant access to user `vagrant`.

``` sh octopress.sh: Install Octopress https://github.com/johker/octopress_vagrant/blob/master/scripts/octopress.sh github
cd /opt/octopress 
gem install bundler
bundle install
rake install
sudo chown -R vagrant /opt/octopress
```
The complete project can be found [here](https://github.com/johker/octopress_vagrant).
