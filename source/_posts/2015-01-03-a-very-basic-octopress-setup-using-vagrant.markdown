---
layout: post
title: "A Very Basic Octopress Setup Using Vagrant"
date: 2015-01-03 16:49:58 +0000
comments: true
categories: [Vagrant, Octopress, github]

---


Setting up Octopress can be tricky, especially on Windows systems. Using a Vagrant powered virtual machine instead, we are only one command away from a blogging environment ready-to-go. Run from the directory of the Vagrantfile _vagrant up_ will create a VirtualBox Image with Ubuntu 14.04 LTS.


``` ruby Vagrantfile for Octopress Setup https://github.com/johker/octopress_vagrant/blob/master/Vagrantfile github
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

	config.vm.box = "octopress" 

  	config.vm.box_url = "https://github.com/kraksoft/vagrant-box-ubuntu/releases/download/14.04/ubuntu-14.04-amd64.box"

  	config.vm.network :private_network, ip: "192.168.34.10"
  	
	config.vm.provider "virtualbox" do |v|
	    v.memory = 2048
	end
  
  	# Install octopress
	config.vm.provision :shell, :path => "scripts/octopress.sh"
  
  	# Sync posts folder  	
  	config.vm.synced_folder "posts/", "/opt/octopress/source/_posts/"
    
end
```

The actual installation is done by shell provisioning. octopress.sh has to be included in the scripts folder relative to the Vagrantfile. It installs git, ruby and grants access to the default user _vagrant_. Note that the git repository has to be cloned into a temporary folder first since the octopress directory is not empty due to the folder _posts synchronized by Vagrant.

``` shell Shell Provisioning https://github.com/johker/octopress_vagrant/blob/master/scripts/octopress.sh github
#!/bin/bash

sudo apt-get -y update

sudo apt-get -y install curl

sudo apt-get -y install gnupg2

gpg2 --keyserver hkp://keys.gnupg.net --recv-keys D39DC0E3

\curl -L https://get.rvm.io | bash -s stable

source /etc/profile.d/rvm.sh

rvm requirements

rvm install ruby

rvm use ruby --default

sudo chown -R vagrant /opt

cd /opt 

# To avoid Javascript runtime error
sudo apt-get -y install nodejs

sudo apt-get -y install -y git-core

# git clone git://github.com/imathis/octopress.git octopress

# Clone in non-empty folder 

git clone git://github.com/imathis/octopress.git temp
mv temp/.git octopress/.git
rm -rf temp
cd /opt/octopress 
git fetch --all
git reset --hard origin/master

cd /opt/octopress 

gem install bundler

bundle install

rake install

sudo chown -R vagrant /opt/octopress

```

Only thing left is to create a posts folder which is used to access the markdown files generated by rake new_post with an IDE from the host system. Any changes will be synchronized automatically. The complete project can be found here.
