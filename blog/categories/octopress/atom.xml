<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Octopress | Almost Automatic]]></title>
  <link href="http://johker.github.io/blog/categories/octopress/atom.xml" rel="self"/>
  <link href="http://johker.github.io/"/>
  <updated>2015-01-04T09:33:42+00:00</updated>
  <id>http://johker.github.io/</id>
  <author>
    <name><![CDATA[Johannes Kern]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[A Very Basic Octopress Setup Using Vagrant]]></title>
    <link href="http://johker.github.io/blog/2015/01/03/a-very-basic-octopress-setup-using-vagrant/"/>
    <updated>2015-01-03T16:49:58+00:00</updated>
    <id>http://johker.github.io/blog/2015/01/03/a-very-basic-octopress-setup-using-vagrant</id>
    <content type="html"><![CDATA[<p>Setting up Octopress can be tricky, especially on Windows systems. Using a Vagrant powered virtual machine instead, we are only one command away from a blogging environment ready-to-go. Run from the directory of the Vagrantfile <code>vagrant up</code> will create a VirtualBox Image with Ubuntu 14.04 LTS.</p>

<pre><code class="ruby Vagrantfile for Octopress Setup https://github.com/johker/octopress_vagrant/blob/master/Vagrantfile github">VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

    config.vm.box = "octopress" 

    config.vm.box_url = "https://github.com/kraksoft/vagrant-box-ubuntu/releases/download/14.04/ubuntu-14.04-amd64.box"

    config.vm.network :private_network, ip: "192.168.34.10"

    config.vm.provider "virtualbox" do |v|
        v.memory = 2048
    end

    # Install octopress
    config.vm.provision :shell, :path =&gt; "scripts/octopress.sh"

    # Sync posts folder     
    config.vm.synced_folder "posts/", "/opt/octopress/source/_posts/"

end
</code></pre>

<p>The actual setup is done by shell provisioning. The script octopress.sh has to be included in the scripts folder relative to the Vagrantfile. It installs git, ruby and grants access to the default user <code>vagrant</code>. Note that the git repository has to be cloned into a temporary folder first since the octopress directory is not empty due to the folder _posts synchronized by Vagrant.</p>

<pre><code class="sh Shell Provisioning https://github.com/johker/octopress_vagrant/blob/master/scripts/octopress.sh github">#!/bin/bash

sudo apt-get -y update

sudo apt-get -y install curl

sudo apt-get -y install gnupg2

gpg2 --keyserver hkp://keys.gnupg.net --recv-keys D39DC0E3

\curl -L https://get.rvm.io | bash -s stable

source /etc/profile.d/rvm.sh

rvm requirements

rvm install ruby

rvm use ruby --default

sudo chown -R vagrant /opt

cd /opt 

# To avoid Javascript runtime error
sudo apt-get -y install nodejs

sudo apt-get -y install -y git-core

# git clone git://github.com/imathis/octopress.git octopress

# Clone in non-empty folder 

git clone git://github.com/imathis/octopress.git temp
mv temp/.git octopress/.git
rm -rf temp
cd /opt/octopress 
git fetch --all
git reset --hard origin/master

cd /opt/octopress 

gem install bundler

bundle install

rake install

sudo chown -R vagrant /opt/octopress
</code></pre>

<p>Only thing left is to create a posts folder which is used to access the markdown files generated by rake newpost with an IDE from the host system. Any changes will be synchronized automatically. The complete project can be found <a href="https://github.com/johker/octopress_vagrant">here</a>.</p>
]]></content>
  </entry>
  
</feed>
